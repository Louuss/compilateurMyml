Terminals unused in grammar

   DIV


Grammar

    0 $accept: prog $end

    1 prog: inst PV
    2     | prog inst PV

    3 inst: aff
    4     | exp

    5 aff: aff_id
    6    | aff_fun

    7 aff_id: ID EQ exp

    8 aff_fun: fun_head EQ exp

    9 fun_head: ID id_list

   10 id_list: ID
   11        | id_list ID

   12 exp: arith_exp
   13    | atom_exp
   14    | control_exp
   15    | let_exp
   16    | LPAR funcall_exp RPAR

   17 arith_exp: MOINS exp
   18          | exp PLUS exp
   19          | exp MULT exp
   20          | exp CONCAT exp

   21 atom_exp: NUM
   22         | FLOAT
   23         | STRING
   24         | ID
   25         | list_exp
   26         | LPAR exp RPAR

   27 control_exp: IF_label bool THEN_label atom_exp ELSE_label atom_exp

   28 IF_label: IF

   29 THEN_label: THEN

   30 ELSE_label: ELSE

   31 let_exp: let2 aff IN atom_exp

   32 let2: LET

   33 funcall_exp: ID atom_list

   34 atom_list: atom_exp
   35          | atom_list atom_exp

   36 list_exp: LBR exp_list RBR

   37 exp_list: exp
   38         | exp_list VIR exp

   39 bool: BOOL
   40     | bool OR bool
   41     | bool AND bool
   42     | NOT bool
   43     | exp comp exp
   44     | LPAR bool RPAR

   45 comp: ISLT
   46     | ISGT
   47     | ISLEQ
   48     | ISGEQ
   49     | ISEQ


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM <val> (258) 21
FLOAT <val> (259) 22
ID <val> (260) 7 9 10 11 24 33
STRING (261) 23
PV (262) 1 2
LPAR (263) 16 26 44
RPAR (264) 16 26 44
LBR (265) 36
RBR (266) 36
LET (267) 32
IN (268) 31
VIR (269) 38
IF (270) 28
THEN (271) 29
ELSE (272) 30
ISLT (273) 45
ISGT (274) 46
ISLEQ (275) 47
ISGEQ (276) 48
ISEQ (277) 49
AND (278) 41
OR (279) 40
NOT (280) 42
BOOL (281) 39
PLUS (282) 18
MOINS (283) 17
MULT (284) 19
DIV (285)
EQ (286) 7 8
CONCAT (287) 20
UNA (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
prog (35)
    on left: 1 2, on right: 0 2
inst (36)
    on left: 3 4, on right: 1 2
aff (37)
    on left: 5 6, on right: 3 31
aff_id <val> (38)
    on left: 7, on right: 5
aff_fun (39)
    on left: 8, on right: 6
fun_head (40)
    on left: 9, on right: 8
id_list (41)
    on left: 10 11, on right: 9 11
exp <val> (42)
    on left: 12 13 14 15 16, on right: 4 7 8 17 18 19 20 26 37 38 43
arith_exp <val> (43)
    on left: 17 18 19 20, on right: 12
atom_exp <val> (44)
    on left: 21 22 23 24 25 26, on right: 13 27 31 34 35
control_exp <val> (45)
    on left: 27, on right: 14
IF_label <val> (46)
    on left: 28, on right: 27
THEN_label <val> (47)
    on left: 29, on right: 27
ELSE_label <val> (48)
    on left: 30, on right: 27
let_exp <val> (49)
    on left: 31, on right: 15
let2 (50)
    on left: 32, on right: 31
funcall_exp (51)
    on left: 33, on right: 16
atom_list (52)
    on left: 34 35, on right: 33 35
list_exp (53)
    on left: 36, on right: 25
exp_list (54)
    on left: 37 38, on right: 36 38
bool <val> (55)
    on left: 39 40 41 42 43 44, on right: 27 40 41 42 44
comp <val> (56)
    on left: 45 46 47 48 49, on right: 43


State 0

    0 $accept: . prog $end

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 3
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    prog         go to state 10
    inst         go to state 11
    aff          go to state 12
    aff_id       go to state 13
    aff_fun      go to state 14
    fun_head     go to state 15
    exp          go to state 16
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 1

   21 atom_exp: NUM .

    $default  reduce using rule 21 (atom_exp)


State 2

   22 atom_exp: FLOAT .

    $default  reduce using rule 22 (atom_exp)


State 3

    7 aff_id: ID . EQ exp
    9 fun_head: ID . id_list
   24 atom_exp: ID .

    ID  shift, and go to state 24
    EQ  shift, and go to state 25

    $default  reduce using rule 24 (atom_exp)

    id_list  go to state 26


State 4

   23 atom_exp: STRING .

    $default  reduce using rule 23 (atom_exp)


State 5

   16 exp: LPAR . funcall_exp RPAR
   26 atom_exp: LPAR . exp RPAR

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 27
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 28
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    funcall_exp  go to state 29
    list_exp     go to state 23


State 6

   36 list_exp: LBR . exp_list RBR

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 31
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23
    exp_list     go to state 32


State 7

   32 let2: LET .

    $default  reduce using rule 32 (let2)


State 8

   28 IF_label: IF .

    $default  reduce using rule 28 (IF_label)


State 9

   17 arith_exp: MOINS . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 33
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 10

    0 $accept: prog . $end
    2 prog: prog . inst PV

    $end    shift, and go to state 34
    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 3
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    inst         go to state 35
    aff          go to state 12
    aff_id       go to state 13
    aff_fun      go to state 14
    fun_head     go to state 15
    exp          go to state 16
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 11

    1 prog: inst . PV

    PV  shift, and go to state 36


State 12

    3 inst: aff .

    $default  reduce using rule 3 (inst)


State 13

    5 aff: aff_id .

    $default  reduce using rule 5 (aff)


State 14

    6 aff: aff_fun .

    $default  reduce using rule 6 (aff)


State 15

    8 aff_fun: fun_head . EQ exp

    EQ  shift, and go to state 37


State 16

    4 inst: exp .
   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    $default  reduce using rule 4 (inst)


State 17

   12 exp: arith_exp .

    $default  reduce using rule 12 (exp)


State 18

   13 exp: atom_exp .

    $default  reduce using rule 13 (exp)


State 19

   14 exp: control_exp .

    $default  reduce using rule 14 (exp)


State 20

   27 control_exp: IF_label . bool THEN_label atom_exp ELSE_label atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 41
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 42
    BOOL    shift, and go to state 43
    MOINS   shift, and go to state 9

    exp          go to state 44
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23
    bool         go to state 45


State 21

   15 exp: let_exp .

    $default  reduce using rule 15 (exp)


State 22

   31 let_exp: let2 . aff IN atom_exp

    ID  shift, and go to state 46

    aff       go to state 47
    aff_id    go to state 13
    aff_fun   go to state 14
    fun_head  go to state 15


State 23

   25 atom_exp: list_exp .

    $default  reduce using rule 25 (atom_exp)


State 24

   10 id_list: ID .

    $default  reduce using rule 10 (id_list)


State 25

    7 aff_id: ID EQ . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 48
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 26

    9 fun_head: ID id_list .
   11 id_list: id_list . ID

    ID  shift, and go to state 49

    $default  reduce using rule 9 (fun_head)


State 27

   24 atom_exp: ID .
   33 funcall_exp: ID . atom_list

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 50
    LBR     shift, and go to state 6

    $default  reduce using rule 24 (atom_exp)

    atom_exp   go to state 51
    atom_list  go to state 52
    list_exp   go to state 23


State 28

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   26 atom_exp: LPAR exp . RPAR

    RPAR    shift, and go to state 53
    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40


State 29

   16 exp: LPAR funcall_exp . RPAR

    RPAR  shift, and go to state 54


State 30

   24 atom_exp: ID .

    $default  reduce using rule 24 (atom_exp)


State 31

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   37 exp_list: exp .

    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    $default  reduce using rule 37 (exp_list)


State 32

   36 list_exp: LBR exp_list . RBR
   38 exp_list: exp_list . VIR exp

    RBR  shift, and go to state 55
    VIR  shift, and go to state 56


State 33

   17 arith_exp: MOINS exp .
   18          | exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    $default  reduce using rule 17 (arith_exp)


State 34

    0 $accept: prog $end .

    $default  accept


State 35

    2 prog: prog inst . PV

    PV  shift, and go to state 57


State 36

    1 prog: inst PV .

    $default  reduce using rule 1 (prog)


State 37

    8 aff_fun: fun_head EQ . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 58
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 38

   18 arith_exp: exp PLUS . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 59
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 39

   19 arith_exp: exp MULT . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 60
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 40

   20 arith_exp: exp CONCAT . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 61
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 41

   16 exp: LPAR . funcall_exp RPAR
   26 atom_exp: LPAR . exp RPAR
   44 bool: LPAR . bool RPAR

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 27
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 41
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 42
    BOOL    shift, and go to state 43
    MOINS   shift, and go to state 9

    exp          go to state 62
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    funcall_exp  go to state 29
    list_exp     go to state 23
    bool         go to state 63


State 42

   42 bool: NOT . bool

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 41
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 42
    BOOL    shift, and go to state 43
    MOINS   shift, and go to state 9

    exp          go to state 44
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23
    bool         go to state 64


State 43

   39 bool: BOOL .

    $default  reduce using rule 39 (bool)


State 44

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   43 bool: exp . comp exp

    ISLT    shift, and go to state 65
    ISGT    shift, and go to state 66
    ISLEQ   shift, and go to state 67
    ISGEQ   shift, and go to state 68
    ISEQ    shift, and go to state 69
    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    comp  go to state 70


State 45

   27 control_exp: IF_label bool . THEN_label atom_exp ELSE_label atom_exp
   40 bool: bool . OR bool
   41     | bool . AND bool

    THEN  shift, and go to state 71
    AND   shift, and go to state 72
    OR    shift, and go to state 73

    THEN_label  go to state 74


State 46

    7 aff_id: ID . EQ exp
    9 fun_head: ID . id_list

    ID  shift, and go to state 24
    EQ  shift, and go to state 25

    id_list  go to state 26


State 47

   31 let_exp: let2 aff . IN atom_exp

    IN  shift, and go to state 75


State 48

    7 aff_id: ID EQ exp .
   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    $default  reduce using rule 7 (aff_id)


State 49

   11 id_list: id_list ID .

    $default  reduce using rule 11 (id_list)


State 50

   26 atom_exp: LPAR . exp RPAR

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 28
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 51

   34 atom_list: atom_exp .

    $default  reduce using rule 34 (atom_list)


State 52

   33 funcall_exp: ID atom_list .
   35 atom_list: atom_list . atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 50
    LBR     shift, and go to state 6

    $default  reduce using rule 33 (funcall_exp)

    atom_exp  go to state 76
    list_exp  go to state 23


State 53

   26 atom_exp: LPAR exp RPAR .

    $default  reduce using rule 26 (atom_exp)


State 54

   16 exp: LPAR funcall_exp RPAR .

    $default  reduce using rule 16 (exp)


State 55

   36 list_exp: LBR exp_list RBR .

    $default  reduce using rule 36 (list_exp)


State 56

   38 exp_list: exp_list VIR . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 77
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 57

    2 prog: prog inst PV .

    $default  reduce using rule 2 (prog)


State 58

    8 aff_fun: fun_head EQ exp .
   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    $default  reduce using rule 8 (aff_fun)


State 59

   18 arith_exp: exp . PLUS exp
   18          | exp PLUS exp .
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    $default  reduce using rule 18 (arith_exp)


State 60

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   19          | exp MULT exp .
   20          | exp . CONCAT exp

    CONCAT  shift, and go to state 40

    $default  reduce using rule 19 (arith_exp)


State 61

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   20          | exp CONCAT exp .

    $default  reduce using rule 20 (arith_exp)


State 62

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   26 atom_exp: LPAR exp . RPAR
   43 bool: exp . comp exp

    RPAR    shift, and go to state 53
    ISLT    shift, and go to state 65
    ISGT    shift, and go to state 66
    ISLEQ   shift, and go to state 67
    ISGEQ   shift, and go to state 68
    ISEQ    shift, and go to state 69
    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    comp  go to state 70


State 63

   40 bool: bool . OR bool
   41     | bool . AND bool
   44     | LPAR bool . RPAR

    RPAR  shift, and go to state 78
    AND   shift, and go to state 72
    OR    shift, and go to state 73


State 64

   40 bool: bool . OR bool
   41     | bool . AND bool
   42     | NOT bool .

    $default  reduce using rule 42 (bool)


State 65

   45 comp: ISLT .

    $default  reduce using rule 45 (comp)


State 66

   46 comp: ISGT .

    $default  reduce using rule 46 (comp)


State 67

   47 comp: ISLEQ .

    $default  reduce using rule 47 (comp)


State 68

   48 comp: ISGEQ .

    $default  reduce using rule 48 (comp)


State 69

   49 comp: ISEQ .

    $default  reduce using rule 49 (comp)


State 70

   43 bool: exp comp . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 79
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23


State 71

   29 THEN_label: THEN .

    $default  reduce using rule 29 (THEN_label)


State 72

   41 bool: bool AND . bool

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 41
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 42
    BOOL    shift, and go to state 43
    MOINS   shift, and go to state 9

    exp          go to state 44
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23
    bool         go to state 80


State 73

   40 bool: bool OR . bool

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 41
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 42
    BOOL    shift, and go to state 43
    MOINS   shift, and go to state 9

    exp          go to state 44
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    IF_label     go to state 20
    let_exp      go to state 21
    let2         go to state 22
    list_exp     go to state 23
    bool         go to state 81


State 74

   27 control_exp: IF_label bool THEN_label . atom_exp ELSE_label atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 50
    LBR     shift, and go to state 6

    atom_exp  go to state 82
    list_exp  go to state 23


State 75

   31 let_exp: let2 aff IN . atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 50
    LBR     shift, and go to state 6

    atom_exp  go to state 83
    list_exp  go to state 23


State 76

   35 atom_list: atom_list atom_exp .

    $default  reduce using rule 35 (atom_list)


State 77

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   38 exp_list: exp_list VIR exp .

    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    $default  reduce using rule 38 (exp_list)


State 78

   44 bool: LPAR bool RPAR .

    $default  reduce using rule 44 (bool)


State 79

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   43 bool: exp comp exp .

    PLUS    shift, and go to state 38
    MULT    shift, and go to state 39
    CONCAT  shift, and go to state 40

    $default  reduce using rule 43 (bool)


State 80

   40 bool: bool . OR bool
   41     | bool . AND bool
   41     | bool AND bool .

    $default  reduce using rule 41 (bool)


State 81

   40 bool: bool . OR bool
   40     | bool OR bool .
   41     | bool . AND bool

    AND  shift, and go to state 72

    $default  reduce using rule 40 (bool)


State 82

   27 control_exp: IF_label bool THEN_label atom_exp . ELSE_label atom_exp

    ELSE  shift, and go to state 84

    ELSE_label  go to state 85


State 83

   31 let_exp: let2 aff IN atom_exp .

    $default  reduce using rule 31 (let_exp)


State 84

   30 ELSE_label: ELSE .

    $default  reduce using rule 30 (ELSE_label)


State 85

   27 control_exp: IF_label bool THEN_label atom_exp ELSE_label . atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 30
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 50
    LBR     shift, and go to state 6

    atom_exp  go to state 86
    list_exp  go to state 23


State 86

   27 control_exp: IF_label bool THEN_label atom_exp ELSE_label atom_exp .

    $default  reduce using rule 27 (control_exp)
